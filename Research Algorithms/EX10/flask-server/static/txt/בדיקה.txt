G = nx.Graph()
nodes = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']
edges = [('1', '2'), ('2', '3'), ('3', '4'),('3','6'), ('4', '5'), ('5', '7'), ('6', '7'), ('7', '11'), ('8', '9'), ('9', '10'),('10','11'),('10','12'),('11','12')]
nodes_attrs = {'1': {"priority": 1},'2': {"priority": 2},'3': {"priority": 1},'4': {"priority": 1},'5': {"priority": 1},'6': {"priority": 1},'7': {"priority": 1},'8': {"priority": 1},'9': {"priority": 2},'10': {"priority": 1},'11': {"priority": 1},'12': {"priority": 1}}
G.add_nodes_from(nodes)
G.add_edges_from(edges)
nx.set_node_attributes(G, nodes_attrs)
find_maximum_priority_matching(G)
